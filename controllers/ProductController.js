const path = require("path");
const fs = require("fs");
const Product = require("../models/Product");

const createProduct = async (req, res) => {
  console.log("Gelen Veriler:", req.body);
  console.log("Y√ºklenen Dosyalar:", req.file);

  try {
    const { productName, productDesc, productPrice } = req.body;

    // Y√ºklenen g√∂rselin yolunu al
    const productImage = req.file
      ? `/uploads/products/${req.file.filename}`
      : null;

    const newProduct = new Product({
      productName,
      productDesc,
      productPrice,
      productImage,
    });

    const savedProduct = await newProduct.save();
    console.log("Kaydedilen √úr√ºn:", savedProduct);

    res.status(201).json(savedProduct);
  } catch (error) {
    console.error("√úr√ºn Olu≈üturma Hatasƒ±:", error);
    res.status(500).json({ message: "√úr√ºn olu≈üturulurken bir hata olu≈ütu." });
  }
};

const updateProduct = async (req, res) => {
  console.log("üì© Gelen Veriler:", req.body);
  console.log("üñºÔ∏è Y√ºklenen Dosya:", req.file);

  const { id } = req.params;
  const { productName, productDesc, productPrice } = req.body;

  const updateData = {
    productName,
    productDesc,
    productPrice,
  };

  // Eƒüer yeni bir resim y√ºklenmi≈üse, g√ºncelle
  if (req.file) {
    updateData.productImage = `/uploads/products/${req.file.filename}`;
  }

  try {
    const updatedProduct = await Product.findByIdAndUpdate(id, updateData, {
      new: true,
    });

    if (!updatedProduct) {
      return res.status(404).json({ message: "√úr√ºn bulunamadƒ±." });
    }

    res.status(200).json(updatedProduct);
  } catch (error) {
    console.error("üî• √úr√ºn g√ºncellenirken hata:", error);
    res.status(500).json({ message: "√úr√ºn g√ºncellenirken hata olu≈ütu." });
  }
};

const getAllProduct = async (req, res) => {
  try {
    const product = await Product.find();
    if (!product) {
      return res.status(404).json({ message: "Section product bulunamadƒ±." });
    }
    res.status(200).json(product);
  } catch (error) {
    res
      .status(500)
      .json({ message: "Section product getirilirken bir hata olu≈ütu." });
  }
};
const deleteProduct = async (req, res) => {
  const { id } = req.params;

  try {
    const deletedProduct = await Product.findByIdAndDelete(id);

    if (!deletedProduct) {
      return res.status(404).json({ message: "√úr√ºn bulunamadƒ±." });
    }

    res.status(200).json({ message: "√úr√ºn ba≈üarƒ±yla silindi." });
  } catch (error) {
    console.error("√úr√ºn silinirken hata:", error);
    res.status(500).json({ message: "√úr√ºn silinirken hata olu≈ütu." });
  }
};

module.exports = { updateProduct, deleteProduct };

module.exports = {
  getAllProduct,
  createProduct,
  updateProduct,
  deleteProduct,
};
